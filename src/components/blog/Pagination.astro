---
import IconChevronRight from '~icons/tabler/chevron-right';
import IconChevronLeft from '~icons/tabler/chevron-left';

export interface Props {
  currentPage: number;
  totalPages: number;
  prevPageUrl: string | null;
  nextPageUrl: string | null;
  maxVisiblePages?: number;
}

const { currentPage, totalPages, prevPageUrl, nextPageUrl, maxVisiblePages = 5 } = Astro.props;

// Generate pagination numbers
function generatePaginationArray(current: number, total: number, maxVisible: number) {
  if (total <= maxVisible) {
    // If we have fewer pages than the maximum to display, show all
    return Array.from({ length: total }, (_, i) => i + 1);
  }

  // Calculate the start and end of the pagination array
  let start = Math.max(current - Math.floor(maxVisible / 2), 1);
  let end = start + maxVisible - 1;

  // Adjust if we're near the end
  if (end > total) {
    end = total;
    start = Math.max(end - maxVisible + 1, 1);
  }

  return Array.from({ length: end - start + 1 }, (_, i) => start + i);
}

const paginationNumbers = generatePaginationArray(currentPage, totalPages, maxVisiblePages);
---

<div class="flex justify-center items-center mt-8 gap-2">
    {/* Previous button - always visible but conditionally disabled */}
    <a href={prevPageUrl || '#'} 
       class={`btn-rect btn-with-icon rounded-lg text-sm flex items-center ${
         prevPageUrl 
           ? 'btn-primary cursor-pointer' 
           : 'btn-primary-disabled pointer-events-none'
       }`}
       aria-label="Go to previous page"
       aria-disabled={!prevPageUrl}>
        <IconChevronLeft class="w-4 h-4" />
        <span>Prev</span>
    </a>
    
    {/* Page numbers */}
    <div class="flex items-center gap-2 mx-2">
        {/* If we're not starting from page 1, show ellipsis */}
        {paginationNumbers[0] > 1 && (
            <>
                <a href="/blog"
                class="btn-square w-10 h-10 flex items-center justify-center rounded-full text-sm btn-primary-text">
                    1
                </a>
                <span class="w-10 h-10 flex items-center justify-center font-medium text-outline">...</span>
            </>
        )}

        {/* Display the calculated page numbers */}
        {paginationNumbers.map(num => (
            <a href={num === 1 ? '/blog' : `/blog/${num}`}
              class={`btn-square w-10 h-10 flex items-center justify-center rounded-full text-sm ${
                num === currentPage ? 
                'btn-primary' : 
                'btn-primary-text'
              }`}
              aria-current={num === currentPage ? 'page' : undefined}>
                {num}
            </a>
        ))}
        
        {/* If we're not showing the last page, show ellipsis */}
        {paginationNumbers[paginationNumbers.length - 1] < totalPages && (
            <>
                <span class="w-10 h-10 flex items-center justify-center font-medium text-outline">...</span>
                <a href={`/blog/${totalPages}`}
                class="btn-square w-10 h-10 flex items-center justify-center rounded-full text-sm btn-primary-text">
                    {totalPages}
                </a>
            </>
        )}
    </div>
    
    {/* Next button - always visible but conditionally disabled */}
    <a href={nextPageUrl || '#'} 
       class={`btn-rect btn-with-icon rounded-lg text-sm flex items-center ${
         nextPageUrl 
           ? 'btn-primary cursor-pointer' 
           : 'btn-primary-disabled pointer-events-none'
       }`}
       aria-label="Go to next page"
       aria-disabled={!nextPageUrl}>
        <span>Next</span>
        <IconChevronRight class="w-4 h-4" />
    </a>
</div>
